<?xml version="1.0"?>
<rdf:RDF xmlns="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#"
     xml:base="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:cpschema="http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#"
     xmlns:sequence="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#"
     xmlns:PlansLite="http://www.loa-cnr.it/ontologies/PlansLite.owl#"
     xmlns:taskexecution="http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl#">
    <owl:Ontology rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl">
        <owl:imports rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl"/>
        <owl:imports rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl"/>
        <cpschema:extractedFrom rdf:datatype="http://www.w3.org/2001/XMLSchema#string">http://www.loa-cnr.it/ontologies/PlansLite.owl</cpschema:extractedFrom>
        <cpschema:hasAuthor>Aldo Gangemi</cpschema:hasAuthor>
        <cpschema:hasIntent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">To represent control flows: activation, branching, decisions, concurrency, etc.</cpschema:hasIntent>
        <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string">1.0</owl:versionInfo>
        <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Created by Aldo Gangemi</owl:versionInfo>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#AbstractMergingTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#AbstractMergingTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#MergingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#follows"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#CaseTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An abstract merging task is a merging aimed at &apos;formally&apos; joining the tasks that are direct successor to a case task.
Differently from synchronization tasks, which are expected to be executed, abstract mergings only provide abstract boundaries to a task structure, because in a case task, only one action task is supposed to be executed.</rdfs:comment>
        <rdfs:label xml:lang="en">Abstract merging task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ActionTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ActionTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskrole.owl#Task"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An action task is an elementary task that sequences non-planning activities, like: moving, exercising forces, gathering information, etc. Planning activites are mental events involving some rational event.</rdfs:comment>
        <rdfs:label xml:lang="en">Action task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ActivationTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ActivationTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskrole.owl#Task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#BranchingTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#LoopTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A control task aimed at starting an activity. It is specialized either by a beginning task or a reactivation task.</rdfs:comment>
        <rdfs:label xml:lang="en">Activation task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#BooleanCaseTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#BooleanCaseTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#CaseTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"/>
                <owl:cardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:cardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>E.g. a yes-or-no case task, requiring exactly two deliberation tasks.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#BranchingTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#BranchingTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"/>
                <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:minCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#EndingTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#LoopTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A task that articulates the plan into an ordered set of tasks.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#CaseTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#CaseTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#BranchingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"/>
                <owl:allValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ConcurrencyTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A case task is a control task branched to a set of tasks that are not executable concurrently. In order to choose which task has to be undertaken, preliminary deliberation tasks should be executed, possibly based on information-gathering and decision rationales.</rdfs:comment>
        <rdfs:label xml:lang="en">Case task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ConcurrencyTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ConcurrencyTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#BranchingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#precedes"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A concurrent task is a task branched to a set of tasks executable concurrently -the sequenced perdurants can overlap-, which means that no deliberation task is performed in order to choose among them. A concurrent task has at least one successor synchronization task, which is aimed at waiting for the execution of all -except the optional ones- tasks direct successor to the concurrent -or any order, see below- one.The axioms cannot be expressed fully in OWL-DL (no value mapping available).</rdfs:comment>
        <rdfs:label xml:lang="en">Concurrency task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskrole.owl#Task"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A control task is a task executed during a planning activity, e.g. an activity aimed at (cognitively or via simulation) anticipating other activities. Therefore, control tasks have usually at least one direct successor task (the controlled one), with the exception of ending tasks.The reification of control constructs allows to represent procedural knowledge into the same ontology including controlled action. Besides conceptual transparency and independency from a particular grounding system, a further advantage is enabling the representation of coordination tasks. For example, a manager that coordinates the execution of several related activities can be represented as a role with a responsibility (duty+right) towards some complex task.</rdfs:comment>
        <rdfs:label xml:lang="en">Control task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DecisionActivity -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DecisionActivity">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl#Action"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl#executesTask"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#CaseTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An activity related to planning. It is supposed to execute a &apos;case task&apos;, and can contain an information gathering activity.</rdfs:comment>
        <rdfs:label xml:lang="en">Decision activity</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationState -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationState">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl#Action"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#follows"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DecisionActivity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl#executesTask"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A state related to planning. It finalizes the execution of a &apos;deliberation task&apos;, and is preceded by a decision activity.</rdfs:comment>
        <rdfs:label xml:lang="en">Decision state</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyFollows"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#CaseTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl#isExecutedIn"/>
                <owl:allValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#DeliberationState"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#EndingTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#LoopTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A deliberation task is a control task that is executed in a deliberation state (a decision taken during a case task execution, e.g. a yes or a no, or a known value, etc.).</rdfs:comment>
        <rdfs:label xml:lang="en">Deliberation task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#EndingTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#EndingTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#LoopTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An ending task is a control task that has no successor tasks defined in the plan.</rdfs:comment>
        <rdfs:label xml:lang="en">Ending task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#LoopTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#LoopTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask"/>
        <owl:disjointWith rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A loop task is a control task that has as successor an action -or complex- task that sequences at least two distinct activities sharing a minimal common set of properties -they have a MinimalCommonType. Notice that MinimalCommonType cannot be formalised as a first-order predicate, and then neither in OWL-DL. It can be considered a trivial guideline: when sequencing looped actions, choose a definite action class from the ground ontology.
Some relations typically hold for loop tasks. Exit condition can be used to state what deliberation task causes to exit the cycle; iteration interval can be used to state how much time should be taken by each iteration of the looped activity; iteration cardinality can be used to state how many times the action should be repeated.</rdfs:comment>
        <rdfs:label xml:lang="en">Loop task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#MergingTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#MergingTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ControlTask"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A task that joins a set of tasks after a branching.</rdfs:comment>
        <rdfs:label xml:lang="en">Merging task</rdfs:label>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask -->

    <owl:Class rdf:about="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#SynchroTask">
        <rdfs:subClassOf rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#MergingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#follows"/>
                <owl:someValuesFrom rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/controlflow.owl#ConcurrencyTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A synchronization task is a merging aimed at waiting for the execution of all (except the optional ones) tasks that are direct successor to a concurrent or any order task.</rdfs:comment>
        <rdfs:label xml:lang="en">Synchro task</rdfs:label>
    </owl:Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 4.5.12.2019-05-06T20:49:08Z) https://github.com/owlcs/owlapi -->

